[tool.poetry]
name = "streamlit_modular_auth"
version = "2023.02.15"
description = ""
authors = ["darrida <darrida.py@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9.6"
streamlit = "^1.0.0"
streamlit-cookies-manager = "^0.2.0"
# trycourier = "^4.4.0"
argon2-cffi = "^21.3.0"
streamlit-lottie = "^0.0.3"
streamlit-option-menu = "^0.3.2"
diskcache = "^5.4.0"
rich = "12.6.0"
sqlmodel = "^0.0.8"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
robotframework = "6.0.1"
robotframework-dependencylibrary = "4.0.0"
robotframework-pythonlibcore = "4.0.0"
robotframework-seleniumlibrary = "6.0.0"
robotframework-stacktrace = "0.4.1"
selenium = "4.7.2"
seleniumbase = "4.9.10"
coverage = "7.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.4"
watchdog = "^2.2.1"
black = "^23.1.0"
ruff = "^0.0.252"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
sqlmodel = "^0.0.8"

[tool.black]
line_length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# https://beta.ruff.rs/docs/
[tool.ruff]
line-length = 120
extend-exclude = [".venv", "*.robot"]
extend-select = ["S", "I"]  # bandit (S), isort (I)

[tool.ruff.isort]
extra-standard-library = []
known-first-party = ["config"]
known-third-party = []
# relative-imports-order = "closest-to-furthest"
# required-imports = ["from __future__ import annotations"]
